{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlind\\\\OneDrive\\\\Desktop\\\\cfb-analytics\\\\src\\\\Components\\\\TriviaGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TriviaGame.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TriviaGame = ({\n  user\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [category, setCategory] = useState('general');\n  const [sessionTime, setSessionTime] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [error, setError] = useState(null);\n\n  // OpenAI API configuration\n  const OPENAI_API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\n  const OPENAI_API_URL = 'https://api.openai.com/v1/chat/completions';\n\n  // Timer for session tracking\n  useEffect(() => {\n    let interval;\n    if (gameActive) {\n      interval = setInterval(() => {\n        setSessionTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [gameActive]);\n\n  // Generate trivia question using OpenAI\n  const generateQuestion = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const difficultyPrompt = {\n        easy: \"beginner-friendly\",\n        medium: \"intermediate level\",\n        hard: \"expert level\"\n      };\n      const categoryPrompt = {\n        general: \"college football and basketball\",\n        football: \"college football\",\n        basketball: \"college basketball\",\n        history: \"college sports history\",\n        records: \"college sports records and statistics\",\n        current: \"current college sports (2024-2025 season)\"\n      };\n      const prompt = `Generate a ${difficultyPrompt[difficulty]} multiple choice trivia question about ${categoryPrompt[category]}. \n\nRequirements:\n- One question with exactly 4 multiple choice answers (A, B, C, D)\n- Only ONE correct answer\n- Make it engaging and educational\n- Include recent players, teams, coaches, or events when possible\n- Avoid questions that could become outdated quickly\n\nFormat your response as JSON:\n{\n  \"question\": \"The actual question text\",\n  \"answers\": {\n    \"A\": \"First option\",\n    \"B\": \"Second option\", \n    \"C\": \"Third option\",\n    \"D\": \"Fourth option\"\n  },\n  \"correct\": \"A\",\n  \"explanation\": \"Brief explanation of why the answer is correct\",\n  \"difficulty\": \"${difficulty}\",\n  \"category\": \"${categoryPrompt[category]}\"\n}`;\n      const response = await fetch(OPENAI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4',\n          messages: [{\n            role: 'system',\n            content: 'You are a college sports trivia expert. Generate engaging, accurate trivia questions about college football and basketball. Always respond with valid JSON only.'\n          }, {\n            role: 'user',\n            content: prompt\n          }],\n          max_tokens: 500,\n          temperature: 0.8\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`OpenAI API Error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      const questionData = JSON.parse(data.choices[0].message.content);\n      setCurrentQuestion(questionData);\n      setGameActive(true);\n    } catch (err) {\n      console.error('Error generating question:', err);\n      setError('Unable to generate question. Please check your OpenAI API connection.');\n\n      // Fallback to let user know system needs API key\n      setCurrentQuestion({\n        question: \"OpenAI API connection needed to generate endless trivia questions.\",\n        answers: {\n          A: \"Add REACT_APP_OPENAI_API_KEY to environment\",\n          B: \"This will enable unlimited questions\",\n          C: \"Questions will be fresh and current\",\n          D: \"All of the above\"\n        },\n        correct: \"D\",\n        explanation: \"Once connected to OpenAI, this trivia system will generate unlimited, fresh college sports questions.\",\n        difficulty: \"info\",\n        category: \"system\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = answerKey => {\n    if (showResult) return;\n    setSelectedAnswer(answerKey);\n  };\n  const submitAnswer = () => {\n    if (!selectedAnswer || !currentQuestion) return;\n    setShowResult(true);\n    setTotalQuestions(prev => prev + 1);\n    if (selectedAnswer === currentQuestion.correct) {\n      setScore(prev => prev + 1);\n      setStreak(prev => prev + 1);\n    } else {\n      setStreak(0);\n    }\n  };\n  const nextQuestion = () => {\n    setSelectedAnswer(null);\n    setShowResult(false);\n    generateQuestion();\n  };\n  const startGame = () => {\n    setScore(0);\n    setStreak(0);\n    setTotalQuestions(0);\n    setSessionTime(0);\n    setGameActive(true);\n    generateQuestion();\n  };\n  const endSession = () => {\n    setGameActive(false);\n    // Here you could save the session stats to your database\n    saveSessionStats();\n  };\n  const saveSessionStats = async () => {\n    if (!user) return;\n    const sessionData = {\n      userId: user.id,\n      score: score,\n      totalQuestions: totalQuestions,\n      sessionTime: sessionTime,\n      accuracy: totalQuestions > 0 ? (score / totalQuestions * 100).toFixed(1) : 0,\n      maxStreak: streak,\n      difficulty: difficulty,\n      category: category,\n      timestamp: new Date().toISOString()\n    };\n    try {\n      // Save to your real database\n      await fetch('/api/trivia/save-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n        body: JSON.stringify(sessionData)\n      });\n    } catch (err) {\n      console.error('Error saving session:', err);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getAccuracy = () => {\n    return totalQuestions > 0 ? (score / totalQuestions * 100).toFixed(1) : 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trivia-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trivia-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFC6 College Sports Trivia Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test your knowledge with unlimited AI-generated questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), gameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: totalQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: [getAccuracy(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: streak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Streak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: formatTime(sessionTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), !gameActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-setup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAE Start Your Trivia Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Difficulty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: difficulty,\n            onChange: e => setDifficulty(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"Easy - Beginner Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium - Intermediate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"Hard - Expert Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"general\",\n              children: \"General - Football & Basketball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"football\",\n              children: \"College Football Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"basketball\",\n              children: \"College Basketball Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"history\",\n              children: \"College Sports History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"records\",\n              children: \"Records & Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"current\",\n              children: \"Current Season (2024-25)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-game-btn\",\n        onClick: startGame,\n        children: \"\\uD83D\\uDE80 Start Unlimited Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-highlights\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDF1F Unlimited Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2705 Endless AI-generated questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2705 Fresh content every time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2705 Multiple difficulty levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2705 Track your streaks and accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2705 Play for hours - build the habit!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-question\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Generating your next question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-detail\",\n          children: \"Creating fresh college sports trivia with AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this) : currentQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-number\",\n            children: [\"Question #\", totalQuestions + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-category\",\n            children: currentQuestion.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-difficulty\",\n            children: currentQuestion.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"question-text\",\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers-grid\",\n          children: Object.entries(currentQuestion.answers).map(([key, answer]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `answer-btn ${selectedAnswer === key ? 'selected' : ''} ${showResult ? key === currentQuestion.correct ? 'correct' : selectedAnswer === key ? 'incorrect' : '' : ''}`,\n            onClick: () => handleAnswerSelect(key),\n            disabled: showResult,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"answer-key\",\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"answer-text\",\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this), !showResult && selectedAnswer ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          onClick: submitAnswer,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }, this) : showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `result-message ${selectedAnswer === currentQuestion.correct ? 'correct' : 'incorrect'}`,\n            children: selectedAnswer === currentQuestion.correct ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-icon\",\n                children: \"\\uD83C\\uDF89\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Correct! Great job!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-icon\",\n                children: \"\\uD83D\\uDCDA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Good try! Learn something new!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Explanation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 21\n            }, this), \" \", currentQuestion.explanation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"next-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-btn\",\n              onClick: nextQuestion,\n              children: \"Next Question \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"end-session-btn\",\n              onClick: endSession,\n              children: \"End Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this) : null, error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u26A0\\uFE0F API Connection Needed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setup-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"To Enable Unlimited Trivia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Add OpenAI API key to environment variables\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Set REACT_APP_OPENAI_API_KEY in your .env file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Restart the application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Once connected, users can play endless, fresh trivia questions!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !gameActive && totalQuestions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Session Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: [score, \" / \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Correct Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: [getAccuracy(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: formatTime(sessionTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Time Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-again-btn\",\n        onClick: startGame,\n        children: \"\\uD83D\\uDD04 Play Another Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(TriviaGame, \"yDbjwC+ItQ1CaklT5ojAa2nL0H0=\");\n_c = TriviaGame;\nexport default TriviaGame;\nvar _c;\n$RefreshReg$(_c, \"TriviaGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TriviaGame","user","_s","currentQuestion","setCurrentQuestion","loading","setLoading","selectedAnswer","setSelectedAnswer","showResult","setShowResult","score","setScore","streak","setStreak","totalQuestions","setTotalQuestions","difficulty","setDifficulty","category","setCategory","sessionTime","setSessionTime","gameActive","setGameActive","error","setError","OPENAI_API_KEY","process","env","REACT_APP_OPENAI_API_KEY","OPENAI_API_URL","interval","setInterval","prev","clearInterval","generateQuestion","difficultyPrompt","easy","medium","hard","categoryPrompt","general","football","basketball","history","records","current","prompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","max_tokens","temperature","ok","Error","status","statusText","data","json","questionData","parse","choices","message","err","console","question","answers","A","B","C","D","correct","explanation","handleAnswerSelect","answerKey","submitAnswer","nextQuestion","startGame","endSession","saveSessionStats","sessionData","userId","id","accuracy","toFixed","maxStreak","timestamp","Date","toISOString","token","formatTime","seconds","mins","Math","floor","secs","toString","padStart","getAccuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","Object","entries","map","key","answer","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tlind/OneDrive/Desktop/cfb-analytics/src/Components/TriviaGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TriviaGame.css';\r\n\r\nconst TriviaGame = ({ user }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [streak, setStreak] = useState(0);\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n  const [difficulty, setDifficulty] = useState('medium');\r\n  const [category, setCategory] = useState('general');\r\n  const [sessionTime, setSessionTime] = useState(0);\r\n  const [gameActive, setGameActive] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // OpenAI API configuration\r\n  const OPENAI_API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\r\n  const OPENAI_API_URL = 'https://api.openai.com/v1/chat/completions';\r\n\r\n  // Timer for session tracking\r\n  useEffect(() => {\r\n    let interval;\r\n    if (gameActive) {\r\n      interval = setInterval(() => {\r\n        setSessionTime(prev => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [gameActive]);\r\n\r\n  // Generate trivia question using OpenAI\r\n  const generateQuestion = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const difficultyPrompt = {\r\n        easy: \"beginner-friendly\",\r\n        medium: \"intermediate level\",\r\n        hard: \"expert level\"\r\n      };\r\n\r\n      const categoryPrompt = {\r\n        general: \"college football and basketball\",\r\n        football: \"college football\",\r\n        basketball: \"college basketball\", \r\n        history: \"college sports history\",\r\n        records: \"college sports records and statistics\",\r\n        current: \"current college sports (2024-2025 season)\"\r\n      };\r\n\r\n      const prompt = `Generate a ${difficultyPrompt[difficulty]} multiple choice trivia question about ${categoryPrompt[category]}. \r\n\r\nRequirements:\r\n- One question with exactly 4 multiple choice answers (A, B, C, D)\r\n- Only ONE correct answer\r\n- Make it engaging and educational\r\n- Include recent players, teams, coaches, or events when possible\r\n- Avoid questions that could become outdated quickly\r\n\r\nFormat your response as JSON:\r\n{\r\n  \"question\": \"The actual question text\",\r\n  \"answers\": {\r\n    \"A\": \"First option\",\r\n    \"B\": \"Second option\", \r\n    \"C\": \"Third option\",\r\n    \"D\": \"Fourth option\"\r\n  },\r\n  \"correct\": \"A\",\r\n  \"explanation\": \"Brief explanation of why the answer is correct\",\r\n  \"difficulty\": \"${difficulty}\",\r\n  \"category\": \"${categoryPrompt[category]}\"\r\n}`;\r\n\r\n      const response = await fetch(OPENAI_API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${OPENAI_API_KEY}`\r\n        },\r\n        body: JSON.stringify({\r\n          model: 'gpt-4',\r\n          messages: [\r\n            {\r\n              role: 'system',\r\n              content: 'You are a college sports trivia expert. Generate engaging, accurate trivia questions about college football and basketball. Always respond with valid JSON only.'\r\n            },\r\n            {\r\n              role: 'user',\r\n              content: prompt\r\n            }\r\n          ],\r\n          max_tokens: 500,\r\n          temperature: 0.8\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`OpenAI API Error: ${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const questionData = JSON.parse(data.choices[0].message.content);\r\n      \r\n      setCurrentQuestion(questionData);\r\n      setGameActive(true);\r\n      \r\n    } catch (err) {\r\n      console.error('Error generating question:', err);\r\n      setError('Unable to generate question. Please check your OpenAI API connection.');\r\n      \r\n      // Fallback to let user know system needs API key\r\n      setCurrentQuestion({\r\n        question: \"OpenAI API connection needed to generate endless trivia questions.\",\r\n        answers: {\r\n          A: \"Add REACT_APP_OPENAI_API_KEY to environment\",\r\n          B: \"This will enable unlimited questions\", \r\n          C: \"Questions will be fresh and current\",\r\n          D: \"All of the above\"\r\n        },\r\n        correct: \"D\",\r\n        explanation: \"Once connected to OpenAI, this trivia system will generate unlimited, fresh college sports questions.\",\r\n        difficulty: \"info\",\r\n        category: \"system\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnswerSelect = (answerKey) => {\r\n    if (showResult) return;\r\n    setSelectedAnswer(answerKey);\r\n  };\r\n\r\n  const submitAnswer = () => {\r\n    if (!selectedAnswer || !currentQuestion) return;\r\n    \r\n    setShowResult(true);\r\n    setTotalQuestions(prev => prev + 1);\r\n    \r\n    if (selectedAnswer === currentQuestion.correct) {\r\n      setScore(prev => prev + 1);\r\n      setStreak(prev => prev + 1);\r\n    } else {\r\n      setStreak(0);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setSelectedAnswer(null);\r\n    setShowResult(false);\r\n    generateQuestion();\r\n  };\r\n\r\n  const startGame = () => {\r\n    setScore(0);\r\n    setStreak(0);\r\n    setTotalQuestions(0);\r\n    setSessionTime(0);\r\n    setGameActive(true);\r\n    generateQuestion();\r\n  };\r\n\r\n  const endSession = () => {\r\n    setGameActive(false);\r\n    // Here you could save the session stats to your database\r\n    saveSessionStats();\r\n  };\r\n\r\n  const saveSessionStats = async () => {\r\n    if (!user) return;\r\n    \r\n    const sessionData = {\r\n      userId: user.id,\r\n      score: score,\r\n      totalQuestions: totalQuestions,\r\n      sessionTime: sessionTime,\r\n      accuracy: totalQuestions > 0 ? ((score / totalQuestions) * 100).toFixed(1) : 0,\r\n      maxStreak: streak,\r\n      difficulty: difficulty,\r\n      category: category,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    try {\r\n      // Save to your real database\r\n      await fetch('/api/trivia/save-session', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${user.token}`\r\n        },\r\n        body: JSON.stringify(sessionData)\r\n      });\r\n    } catch (err) {\r\n      console.error('Error saving session:', err);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getAccuracy = () => {\r\n    return totalQuestions > 0 ? ((score / totalQuestions) * 100).toFixed(1) : 0;\r\n  };\r\n\r\n  return (\r\n    <div className=\"trivia-game\">\r\n      {/* Game Header */}\r\n      <div className=\"trivia-header\">\r\n        <h1>🏆 College Sports Trivia Challenge</h1>\r\n        <p>Test your knowledge with unlimited AI-generated questions</p>\r\n        \r\n        {/* Game Stats */}\r\n        {gameActive && (\r\n          <div className=\"game-stats\">\r\n            <div className=\"stat\">\r\n              <span className=\"value\">{score}</span>\r\n              <span className=\"label\">Correct</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"value\">{totalQuestions}</span>\r\n              <span className=\"label\">Total</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"value\">{getAccuracy()}%</span>\r\n              <span className=\"label\">Accuracy</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"value\">{streak}</span>\r\n              <span className=\"label\">Streak</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"value\">{formatTime(sessionTime)}</span>\r\n              <span className=\"label\">Time</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Game Controls */}\r\n      {!gameActive ? (\r\n        <div className=\"game-setup\">\r\n          <h2>🎮 Start Your Trivia Session</h2>\r\n          \r\n          <div className=\"setup-options\">\r\n            <div className=\"option-group\">\r\n              <label>Difficulty:</label>\r\n              <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\r\n                <option value=\"easy\">Easy - Beginner Level</option>\r\n                <option value=\"medium\">Medium - Intermediate</option>\r\n                <option value=\"hard\">Hard - Expert Level</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"option-group\">\r\n              <label>Category:</label>\r\n              <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                <option value=\"general\">General - Football & Basketball</option>\r\n                <option value=\"football\">College Football Only</option>\r\n                <option value=\"basketball\">College Basketball Only</option>\r\n                <option value=\"history\">College Sports History</option>\r\n                <option value=\"records\">Records & Statistics</option>\r\n                <option value=\"current\">Current Season (2024-25)</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"start-game-btn\" onClick={startGame}>\r\n            🚀 Start Unlimited Trivia\r\n          </button>\r\n          \r\n          <div className=\"feature-highlights\">\r\n            <h3>🌟 Unlimited Features</h3>\r\n            <ul>\r\n              <li>✅ Endless AI-generated questions</li>\r\n              <li>✅ Fresh content every time</li>\r\n              <li>✅ Multiple difficulty levels</li>\r\n              <li>✅ Track your streaks and accuracy</li>\r\n              <li>✅ Play for hours - build the habit!</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Question Section */}\r\n          {loading ? (\r\n            <div className=\"loading-question\">\r\n              <div className=\"loading-spinner\"></div>\r\n              <p>Generating your next question...</p>\r\n              <p className=\"loading-detail\">Creating fresh college sports trivia with AI</p>\r\n            </div>\r\n          ) : currentQuestion ? (\r\n            <div className=\"question-section\">\r\n              <div className=\"question-header\">\r\n                <span className=\"question-number\">Question #{totalQuestions + 1}</span>\r\n                <span className=\"question-category\">{currentQuestion.category}</span>\r\n                <span className=\"question-difficulty\">{currentQuestion.difficulty}</span>\r\n              </div>\r\n              \r\n              <h2 className=\"question-text\">{currentQuestion.question}</h2>\r\n              \r\n              <div className=\"answers-grid\">\r\n                {Object.entries(currentQuestion.answers).map(([key, answer]) => (\r\n                  <button\r\n                    key={key}\r\n                    className={`answer-btn ${selectedAnswer === key ? 'selected' : ''} ${\r\n                      showResult ? (key === currentQuestion.correct ? 'correct' : selectedAnswer === key ? 'incorrect' : '') : ''\r\n                    }`}\r\n                    onClick={() => handleAnswerSelect(key)}\r\n                    disabled={showResult}\r\n                  >\r\n                    <span className=\"answer-key\">{key}</span>\r\n                    <span className=\"answer-text\">{answer}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              \r\n              {!showResult && selectedAnswer ? (\r\n                <button className=\"submit-btn\" onClick={submitAnswer}>\r\n                  Submit Answer\r\n                </button>\r\n              ) : showResult ? (\r\n                <div className=\"result-section\">\r\n                  <div className={`result-message ${selectedAnswer === currentQuestion.correct ? 'correct' : 'incorrect'}`}>\r\n                    {selectedAnswer === currentQuestion.correct ? (\r\n                      <>\r\n                        <span className=\"result-icon\">🎉</span>\r\n                        <span>Correct! Great job!</span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <span className=\"result-icon\">📚</span>\r\n                        <span>Good try! Learn something new!</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"explanation\">\r\n                    <strong>Explanation:</strong> {currentQuestion.explanation}\r\n                  </div>\r\n                  \r\n                  <div className=\"next-controls\">\r\n                    <button className=\"next-btn\" onClick={nextQuestion}>\r\n                      Next Question →\r\n                    </button>\r\n                    <button className=\"end-session-btn\" onClick={endSession}>\r\n                      End Session\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          {error && (\r\n            <div className=\"error-section\">\r\n              <h3>⚠️ API Connection Needed</h3>\r\n              <p>{error}</p>\r\n              <div className=\"setup-instructions\">\r\n                <h4>To Enable Unlimited Trivia:</h4>\r\n                <ol>\r\n                  <li>Add OpenAI API key to environment variables</li>\r\n                  <li>Set REACT_APP_OPENAI_API_KEY in your .env file</li>\r\n                  <li>Restart the application</li>\r\n                </ol>\r\n                <p>Once connected, users can play endless, fresh trivia questions!</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Session Summary */}\r\n      {!gameActive && totalQuestions > 0 && (\r\n        <div className=\"session-summary\">\r\n          <h3>📊 Session Complete!</h3>\r\n          <div className=\"summary-stats\">\r\n            <div className=\"summary-stat\">\r\n              <span className=\"value\">{score} / {totalQuestions}</span>\r\n              <span className=\"label\">Correct Answers</span>\r\n            </div>\r\n            <div className=\"summary-stat\">\r\n              <span className=\"value\">{getAccuracy()}%</span>\r\n              <span className=\"label\">Accuracy</span>\r\n            </div>\r\n            <div className=\"summary-stat\">\r\n              <span className=\"value\">{formatTime(sessionTime)}</span>\r\n              <span className=\"label\">Time Played</span>\r\n            </div>\r\n          </div>\r\n          <button className=\"play-again-btn\" onClick={startGame}>\r\n            🔄 Play Another Session\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TriviaGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}