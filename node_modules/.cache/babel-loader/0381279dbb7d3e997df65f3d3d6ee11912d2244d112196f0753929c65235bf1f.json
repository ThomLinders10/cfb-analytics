{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlind\\\\OneDrive\\\\Desktop\\\\cfb-analytics\\\\src\\\\MockStripe.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock Stripe for development - src/MockStripe.js\n\n// Mock @stripe/stripe-js\nexport const loadStripe = async publishableKey => {\n  console.log('Mock Stripe loaded with key:', publishableKey);\n  return {\n    elements: () => ({\n      create: (type, options) => ({\n        mount: selector => console.log('Mock element mounted:', type, selector),\n        on: (event, handler) => console.log('Mock event listener:', event),\n        destroy: () => console.log('Mock element destroyed')\n      }),\n      getElement: type => ({\n        clear: () => console.log('Mock element cleared')\n      })\n    }),\n    createPaymentMethod: async options => {\n      console.log('Mock payment method created:', options);\n      return {\n        paymentMethod: {\n          id: 'pm_mock_123456',\n          type: 'card'\n        }\n      };\n    },\n    confirmCardPayment: async (clientSecret, paymentMethod) => {\n      console.log('Mock payment confirmed:', clientSecret);\n      return {\n        paymentIntent: {\n          id: 'pi_mock_123456',\n          status: 'succeeded'\n        }\n      };\n    }\n  };\n};\n\n// Mock @stripe/react-stripe-js\nexport const Elements = ({\n  children,\n  stripe,\n  options\n}) => {\n  return children;\n};\n_c = Elements;\nexport const CardElement = ({\n  onChange,\n  onReady\n}) => {\n  // Simulate card element\n  setTimeout(() => {\n    if (onReady) onReady();\n  }, 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      borderRadius: '4px',\n      padding: '12px',\n      background: 'white',\n      color: '#424770'\n    },\n    children: \"Mock Card Element - **** **** **** 4242\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CardElement;\nexport const useStripe = () => {\n  return {\n    createPaymentMethod: async options => {\n      return {\n        paymentMethod: {\n          id: 'pm_mock_123456'\n        }\n      };\n    },\n    confirmCardPayment: async clientSecret => {\n      return {\n        paymentIntent: {\n          status: 'succeeded'\n        }\n      };\n    }\n  };\n};\nexport const useElements = () => {\n  return {\n    getElement: type => ({\n      clear: () => console.log('Mock element cleared')\n    })\n  };\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Elements\");\n$RefreshReg$(_c2, \"CardElement\");","map":{"version":3,"names":["loadStripe","publishableKey","console","log","elements","create","type","options","mount","selector","on","event","handler","destroy","getElement","clear","createPaymentMethod","paymentMethod","id","confirmCardPayment","clientSecret","paymentIntent","status","Elements","children","stripe","_c","CardElement","onChange","onReady","setTimeout","_jsxDEV","style","border","borderRadius","padding","background","color","fileName","_jsxFileName","lineNumber","columnNumber","_c2","useStripe","useElements","$RefreshReg$"],"sources":["C:/Users/tlind/OneDrive/Desktop/cfb-analytics/src/MockStripe.js"],"sourcesContent":["// Mock Stripe for development - src/MockStripe.js\r\n\r\n// Mock @stripe/stripe-js\r\nexport const loadStripe = async (publishableKey) => {\r\n  console.log('Mock Stripe loaded with key:', publishableKey);\r\n  \r\n  return {\r\n    elements: () => ({\r\n      create: (type, options) => ({\r\n        mount: (selector) => console.log('Mock element mounted:', type, selector),\r\n        on: (event, handler) => console.log('Mock event listener:', event),\r\n        destroy: () => console.log('Mock element destroyed')\r\n      }),\r\n      getElement: (type) => ({\r\n        clear: () => console.log('Mock element cleared')\r\n      })\r\n    }),\r\n    \r\n    createPaymentMethod: async (options) => {\r\n      console.log('Mock payment method created:', options);\r\n      return {\r\n        paymentMethod: {\r\n          id: 'pm_mock_123456',\r\n          type: 'card'\r\n        }\r\n      };\r\n    },\r\n    \r\n    confirmCardPayment: async (clientSecret, paymentMethod) => {\r\n      console.log('Mock payment confirmed:', clientSecret);\r\n      return {\r\n        paymentIntent: {\r\n          id: 'pi_mock_123456',\r\n          status: 'succeeded'\r\n        }\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\n// Mock @stripe/react-stripe-js\r\nexport const Elements = ({ children, stripe, options }) => {\r\n  return children;\r\n};\r\n\r\nexport const CardElement = ({ onChange, onReady }) => {\r\n  // Simulate card element\r\n  setTimeout(() => {\r\n    if (onReady) onReady();\r\n  }, 100);\r\n  \r\n  return (\r\n    <div style={{\r\n      border: '1px solid #ccc',\r\n      borderRadius: '4px',\r\n      padding: '12px',\r\n      background: 'white',\r\n      color: '#424770'\r\n    }}>\r\n      Mock Card Element - **** **** **** 4242\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const useStripe = () => {\r\n  return {\r\n    createPaymentMethod: async (options) => {\r\n      return {\r\n        paymentMethod: { id: 'pm_mock_123456' }\r\n      };\r\n    },\r\n    confirmCardPayment: async (clientSecret) => {\r\n      return {\r\n        paymentIntent: { status: 'succeeded' }\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\nexport const useElements = () => {\r\n  return {\r\n    getElement: (type) => ({\r\n      clear: () => console.log('Mock element cleared')\r\n    })\r\n  };\r\n};"],"mappings":";;AAAA;;AAEA;AACA,OAAO,MAAMA,UAAU,GAAG,MAAOC,cAAc,IAAK;EAClDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,cAAc,CAAC;EAE3D,OAAO;IACLG,QAAQ,EAAEA,CAAA,MAAO;MACfC,MAAM,EAAEA,CAACC,IAAI,EAAEC,OAAO,MAAM;QAC1BC,KAAK,EAAGC,QAAQ,IAAKP,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEG,IAAI,EAAEG,QAAQ,CAAC;QACzEC,EAAE,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAKV,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,KAAK,CAAC;QAClEE,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACC,GAAG,CAAC,wBAAwB;MACrD,CAAC,CAAC;MACFW,UAAU,EAAGR,IAAI,KAAM;QACrBS,KAAK,EAAEA,CAAA,KAAMb,OAAO,CAACC,GAAG,CAAC,sBAAsB;MACjD,CAAC;IACH,CAAC,CAAC;IAEFa,mBAAmB,EAAE,MAAOT,OAAO,IAAK;MACtCL,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEI,OAAO,CAAC;MACpD,OAAO;QACLU,aAAa,EAAE;UACbC,EAAE,EAAE,gBAAgB;UACpBZ,IAAI,EAAE;QACR;MACF,CAAC;IACH,CAAC;IAEDa,kBAAkB,EAAE,MAAAA,CAAOC,YAAY,EAAEH,aAAa,KAAK;MACzDf,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEiB,YAAY,CAAC;MACpD,OAAO;QACLC,aAAa,EAAE;UACbH,EAAE,EAAE,gBAAgB;UACpBI,MAAM,EAAE;QACV;MACF,CAAC;IACH;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAElB;AAAQ,CAAC,KAAK;EACzD,OAAOiB,QAAQ;AACjB,CAAC;AAACE,EAAA,GAFWH,QAAQ;AAIrB,OAAO,MAAMI,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACpD;EACAC,UAAU,CAAC,MAAM;IACf,IAAID,OAAO,EAAEA,OAAO,CAAC,CAAC;EACxB,CAAC,EAAE,GAAG,CAAC;EAEP,oBACEE,OAAA;IAAKC,KAAK,EAAE;MACVC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,OAAO;MACnBC,KAAK,EAAE;IACT,CAAE;IAAAb,QAAA,EAAC;EAEH;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACC,GAAA,GAjBWf,WAAW;AAmBxB,OAAO,MAAMgB,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACL3B,mBAAmB,EAAE,MAAOT,OAAO,IAAK;MACtC,OAAO;QACLU,aAAa,EAAE;UAAEC,EAAE,EAAE;QAAiB;MACxC,CAAC;IACH,CAAC;IACDC,kBAAkB,EAAE,MAAOC,YAAY,IAAK;MAC1C,OAAO;QACLC,aAAa,EAAE;UAAEC,MAAM,EAAE;QAAY;MACvC,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMsB,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO;IACL9B,UAAU,EAAGR,IAAI,KAAM;MACrBS,KAAK,EAAEA,CAAA,KAAMb,OAAO,CAACC,GAAG,CAAC,sBAAsB;IACjD,CAAC;EACH,CAAC;AACH,CAAC;AAAC,IAAAuB,EAAA,EAAAgB,GAAA;AAAAG,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}